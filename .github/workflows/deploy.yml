name: Deploy

on:
  push:
    branches:
      - main
env:
  NODE_VERSION: 22.x

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/${{ github.repository }}/backend-next
            context: backend-next
          - image: ghcr.io/${{ github.repository }}/frontend
            context: frontend
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          flavor: latest=true # adds :latest tag to outputs.tags
          tags: type=sha,format=long,prefix= # adds :<sha> tag to outputs.tags

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}-${{ env.NODE_VERSION }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: cd ${{ matrix.context }} && npm ci

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}

#      - uses: actions/create-github-app-token@v2
#        id: app-token
#        with:
#          app-id: ${{ secrets.WORKFLOW_DISPATCHER_APP_ID }}
#          private-key: ${{ secrets.WORKFLOW_DISPATCHER_APP_PRIVATE_KEY }}
#          repositories: scitacean
#
#      - name: Trigger test workflow in scitacean
#        uses: actions/github-script@v7
#        with:
#          github-token: ${{ steps.app-token.outputs.token }}
#          script: |
#            github.rest.actions.createWorkflowDispatch({
#              owner: 'SciCatProject',
#              repo: 'scitacean',
#              workflow_id: 'test.yml',  
#              ref: 'main',
#              inputs: {
#                "backend-version": "latest",
#                "python-version": "3.13",
#                "tox-env": "py313-full"
#              }
#            })
