# coding: utf-8

"""
    dacat-api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.6.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.proposal_api import ProposalApi


class TestProposalApi(unittest.TestCase):
    """ ProposalApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.proposal_api.ProposalApi()

    def tearDown(self):
        pass

    def test_proposal_count(self):
        """
        Test case for proposal_count

        Count instances of the model matched by where from the data source.
        """
        pass

    def test_proposal_create(self):
        """
        Test case for proposal_create

        Create a new instance of the model and persist it into the data source.
        """
        pass

    def test_proposal_create_change_stream_get_proposals_change_stream(self):
        """
        Test case for proposal_create_change_stream_get_proposals_change_stream

        Create a change stream.
        """
        pass

    def test_proposal_create_change_stream_post_proposals_change_stream(self):
        """
        Test case for proposal_create_change_stream_post_proposals_change_stream

        Create a change stream.
        """
        pass

    def test_proposal_delete_by_id(self):
        """
        Test case for proposal_delete_by_id

        Delete a model instance by {{id}} from the data source.
        """
        pass

    def test_proposal_exists_get_proposalsid_exists(self):
        """
        Test case for proposal_exists_get_proposalsid_exists

        Check whether a model instance exists in the data source.
        """
        pass

    def test_proposal_exists_head_proposalsid(self):
        """
        Test case for proposal_exists_head_proposalsid

        Check whether a model instance exists in the data source.
        """
        pass

    def test_proposal_find(self):
        """
        Test case for proposal_find

        Find all instances of the model matched by filter from the data source.
        """
        pass

    def test_proposal_find_by_id(self):
        """
        Test case for proposal_find_by_id

        Find a model instance by {{id}} from the data source.
        """
        pass

    def test_proposal_find_by_instrument_and_date(self):
        """
        Test case for proposal_find_by_instrument_and_date

        Find proposal that took data at specified instrument and time
        """
        pass

    def test_proposal_find_one(self):
        """
        Test case for proposal_find_one

        Find first instance of the model matched by filter from the data source.
        """
        pass

    def test_proposal_is_valid(self):
        """
        Test case for proposal_is_valid

        Check if data is valid according to a schema
        """
        pass

    def test_proposal_patch_or_create(self):
        """
        Test case for proposal_patch_or_create

        Patch an existing model instance or insert a new one into the data source.
        """
        pass

    def test_proposal_prototype_count_measurement_periods(self):
        """
        Test case for proposal_prototype_count_measurement_periods

        Counts measurementPeriods of Proposal.
        """
        pass

    def test_proposal_prototype_create_measurement_periods(self):
        """
        Test case for proposal_prototype_create_measurement_periods

        Creates a new instance in measurementPeriods of this model.
        """
        pass

    def test_proposal_prototype_delete_measurement_periods(self):
        """
        Test case for proposal_prototype_delete_measurement_periods

        Deletes all measurementPeriods of this model.
        """
        pass

    def test_proposal_prototype_destroy_by_id_measurement_periods(self):
        """
        Test case for proposal_prototype_destroy_by_id_measurement_periods

        Delete a related item by id for measurementPeriods.
        """
        pass

    def test_proposal_prototype_find_by_id_measurement_periods(self):
        """
        Test case for proposal_prototype_find_by_id_measurement_periods

        Find a related item by id for measurementPeriods.
        """
        pass

    def test_proposal_prototype_get_measurement_periods(self):
        """
        Test case for proposal_prototype_get_measurement_periods

        Queries measurementPeriods of Proposal.
        """
        pass

    def test_proposal_prototype_patch_attributes(self):
        """
        Test case for proposal_prototype_patch_attributes

        Patch attributes for a model instance and persist it into the data source.
        """
        pass

    def test_proposal_prototype_update_by_id_measurement_periods(self):
        """
        Test case for proposal_prototype_update_by_id_measurement_periods

        Update a related item by id for measurementPeriods.
        """
        pass

    def test_proposal_replace_by_id_post_proposalsid_replace(self):
        """
        Test case for proposal_replace_by_id_post_proposalsid_replace

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_proposal_replace_by_id_put_proposalsid(self):
        """
        Test case for proposal_replace_by_id_put_proposalsid

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_proposal_replace_or_create_post_proposals_replace_or_create(self):
        """
        Test case for proposal_replace_or_create_post_proposals_replace_or_create

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_proposal_replace_or_create_put_proposals(self):
        """
        Test case for proposal_replace_or_create_put_proposals

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_proposal_search_text(self):
        """
        Test case for proposal_search_text

        Search text inside proposal
        """
        pass

    def test_proposal_update_all(self):
        """
        Test case for proposal_update_all

        Update instances of the model matched by {{where}} from the data source.
        """
        pass

    def test_proposal_upsert_with_where(self):
        """
        Test case for proposal_upsert_with_where

        Update an existing model instance or insert a new one into the data source based on the where criteria.
        """
        pass


if __name__ == '__main__':
    unittest.main()
