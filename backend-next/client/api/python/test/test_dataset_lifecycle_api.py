# coding: utf-8

"""
    dacat-api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.dataset_lifecycle_api import DatasetLifecycleApi


class TestDatasetLifecycleApi(unittest.TestCase):
    """ DatasetLifecycleApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.dataset_lifecycle_api.DatasetLifecycleApi()

    def tearDown(self):
        pass

    def test_dataset_lifecycle_count(self):
        """
        Test case for dataset_lifecycle_count

        Count instances of the model matched by where from the data source.
        """
        pass

    def test_dataset_lifecycle_create(self):
        """
        Test case for dataset_lifecycle_create

        Create a new instance of the model and persist it into the data source.
        """
        pass

    def test_dataset_lifecycle_create_change_stream_get_dataset_lifecycles_change_stream(self):
        """
        Test case for dataset_lifecycle_create_change_stream_get_dataset_lifecycles_change_stream

        Create a change stream.
        """
        pass

    def test_dataset_lifecycle_create_change_stream_post_dataset_lifecycles_change_stream(self):
        """
        Test case for dataset_lifecycle_create_change_stream_post_dataset_lifecycles_change_stream

        Create a change stream.
        """
        pass

    def test_dataset_lifecycle_delete_by_id(self):
        """
        Test case for dataset_lifecycle_delete_by_id

        Delete a model instance by {{id}} from the data source.
        """
        pass

    def test_dataset_lifecycle_exists_get_dataset_lifecyclesid_exists(self):
        """
        Test case for dataset_lifecycle_exists_get_dataset_lifecyclesid_exists

        Check whether a model instance exists in the data source.
        """
        pass

    def test_dataset_lifecycle_exists_head_dataset_lifecyclesid(self):
        """
        Test case for dataset_lifecycle_exists_head_dataset_lifecyclesid

        Check whether a model instance exists in the data source.
        """
        pass

    def test_dataset_lifecycle_find(self):
        """
        Test case for dataset_lifecycle_find

        Find all instances of the model matched by filter from the data source.
        """
        pass

    def test_dataset_lifecycle_find_by_id(self):
        """
        Test case for dataset_lifecycle_find_by_id

        Find a model instance by {{id}} from the data source.
        """
        pass

    def test_dataset_lifecycle_find_one(self):
        """
        Test case for dataset_lifecycle_find_one

        Find first instance of the model matched by filter from the data source.
        """
        pass

    def test_dataset_lifecycle_patch_or_create_patch_dataset_lifecycles(self):
        """
        Test case for dataset_lifecycle_patch_or_create_patch_dataset_lifecycles

        Patch an existing model instance or insert a new one into the data source.
        """
        pass

    def test_dataset_lifecycle_patch_or_create_put_dataset_lifecycles(self):
        """
        Test case for dataset_lifecycle_patch_or_create_put_dataset_lifecycles

        Patch an existing model instance or insert a new one into the data source.
        """
        pass

    def test_dataset_lifecycle_prototype_get_dataset(self):
        """
        Test case for dataset_lifecycle_prototype_get_dataset

        Fetches belongsTo relation dataset.
        """
        pass

    def test_dataset_lifecycle_prototype_patch_attributes_patch_dataset_lifecyclesid(self):
        """
        Test case for dataset_lifecycle_prototype_patch_attributes_patch_dataset_lifecyclesid

        Patch attributes for a model instance and persist it into the data source.
        """
        pass

    def test_dataset_lifecycle_prototype_patch_attributes_put_dataset_lifecyclesid(self):
        """
        Test case for dataset_lifecycle_prototype_patch_attributes_put_dataset_lifecyclesid

        Patch attributes for a model instance and persist it into the data source.
        """
        pass

    def test_dataset_lifecycle_replace_by_id(self):
        """
        Test case for dataset_lifecycle_replace_by_id

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_dataset_lifecycle_replace_or_create(self):
        """
        Test case for dataset_lifecycle_replace_or_create

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_dataset_lifecycle_update_all(self):
        """
        Test case for dataset_lifecycle_update_all

        Update instances of the model matched by {{where}} from the data source.
        """
        pass

    def test_dataset_lifecycle_upsert_with_where(self):
        """
        Test case for dataset_lifecycle_upsert_with_where

        Update an existing model instance or insert a new one into the data source based on the where criteria.
        """
        pass


if __name__ == '__main__':
    unittest.main()
