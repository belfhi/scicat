# coding: utf-8

"""
    dacat-api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.orig_datablock_api import OrigDatablockApi


class TestOrigDatablockApi(unittest.TestCase):
    """ OrigDatablockApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.orig_datablock_api.OrigDatablockApi()

    def tearDown(self):
        pass

    def test_orig_datablock_count(self):
        """
        Test case for orig_datablock_count

        Count instances of the model matched by where from the data source.
        """
        pass

    def test_orig_datablock_create(self):
        """
        Test case for orig_datablock_create

        Create a new instance of the model and persist it into the data source.
        """
        pass

    def test_orig_datablock_create_change_stream_get_orig_datablocks_change_stream(self):
        """
        Test case for orig_datablock_create_change_stream_get_orig_datablocks_change_stream

        Create a change stream.
        """
        pass

    def test_orig_datablock_create_change_stream_post_orig_datablocks_change_stream(self):
        """
        Test case for orig_datablock_create_change_stream_post_orig_datablocks_change_stream

        Create a change stream.
        """
        pass

    def test_orig_datablock_delete_by_id(self):
        """
        Test case for orig_datablock_delete_by_id

        Delete a model instance by {{id}} from the data source.
        """
        pass

    def test_orig_datablock_exists_get_orig_datablocksid_exists(self):
        """
        Test case for orig_datablock_exists_get_orig_datablocksid_exists

        Check whether a model instance exists in the data source.
        """
        pass

    def test_orig_datablock_exists_head_orig_datablocksid(self):
        """
        Test case for orig_datablock_exists_head_orig_datablocksid

        Check whether a model instance exists in the data source.
        """
        pass

    def test_orig_datablock_find(self):
        """
        Test case for orig_datablock_find

        Find all instances of the model matched by filter from the data source.
        """
        pass

    def test_orig_datablock_find_by_id(self):
        """
        Test case for orig_datablock_find_by_id

        Find a model instance by {{id}} from the data source.
        """
        pass

    def test_orig_datablock_find_one(self):
        """
        Test case for orig_datablock_find_one

        Find first instance of the model matched by filter from the data source.
        """
        pass

    def test_orig_datablock_patch_or_create(self):
        """
        Test case for orig_datablock_patch_or_create

        Patch an existing model instance or insert a new one into the data source.
        """
        pass

    def test_orig_datablock_prototype_get_dataset(self):
        """
        Test case for orig_datablock_prototype_get_dataset

        Fetches belongsTo relation dataset.
        """
        pass

    def test_orig_datablock_prototype_patch_attributes(self):
        """
        Test case for orig_datablock_prototype_patch_attributes

        Patch attributes for a model instance and persist it into the data source.
        """
        pass

    def test_orig_datablock_replace_by_id_post_orig_datablocksid_replace(self):
        """
        Test case for orig_datablock_replace_by_id_post_orig_datablocksid_replace

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_orig_datablock_replace_by_id_put_orig_datablocksid(self):
        """
        Test case for orig_datablock_replace_by_id_put_orig_datablocksid

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_orig_datablock_replace_or_create_post_orig_datablocks_replace_or_create(self):
        """
        Test case for orig_datablock_replace_or_create_post_orig_datablocks_replace_or_create

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_orig_datablock_replace_or_create_put_orig_datablocks(self):
        """
        Test case for orig_datablock_replace_or_create_put_orig_datablocks

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_orig_datablock_update_all(self):
        """
        Test case for orig_datablock_update_all

        Update instances of the model matched by {{where}} from the data source.
        """
        pass

    def test_orig_datablock_upsert_with_where(self):
        """
        Test case for orig_datablock_upsert_with_where

        Update an existing model instance or insert a new one into the data source based on the where criteria.
        """
        pass


if __name__ == '__main__':
    unittest.main()
