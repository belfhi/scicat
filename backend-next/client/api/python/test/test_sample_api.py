# coding: utf-8

"""
    dacat-api

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 2.5.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.sample_api import SampleApi


class TestSampleApi(unittest.TestCase):
    """ SampleApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.sample_api.SampleApi()

    def tearDown(self):
        pass

    def test_sample_count(self):
        """
        Test case for sample_count

        Count instances of the model matched by where from the data source.
        """
        pass

    def test_sample_create(self):
        """
        Test case for sample_create

        Create a new instance of the model and persist it into the data source.
        """
        pass

    def test_sample_create_change_stream_get_samples_change_stream(self):
        """
        Test case for sample_create_change_stream_get_samples_change_stream

        Create a change stream.
        """
        pass

    def test_sample_create_change_stream_post_samples_change_stream(self):
        """
        Test case for sample_create_change_stream_post_samples_change_stream

        Create a change stream.
        """
        pass

    def test_sample_delete_by_id(self):
        """
        Test case for sample_delete_by_id

        Delete a model instance by {{id}} from the data source.
        """
        pass

    def test_sample_exists_get_samplesid_exists(self):
        """
        Test case for sample_exists_get_samplesid_exists

        Check whether a model instance exists in the data source.
        """
        pass

    def test_sample_exists_head_samplesid(self):
        """
        Test case for sample_exists_head_samplesid

        Check whether a model instance exists in the data source.
        """
        pass

    def test_sample_find(self):
        """
        Test case for sample_find

        Find all instances of the model matched by filter from the data source.
        """
        pass

    def test_sample_find_by_id(self):
        """
        Test case for sample_find_by_id

        Find a model instance by {{id}} from the data source.
        """
        pass

    def test_sample_find_one(self):
        """
        Test case for sample_find_one

        Find first instance of the model matched by filter from the data source.
        """
        pass

    def test_sample_patch_or_create(self):
        """
        Test case for sample_patch_or_create

        Patch an existing model instance or insert a new one into the data source.
        """
        pass

    def test_sample_prototype_patch_attributes(self):
        """
        Test case for sample_prototype_patch_attributes

        Patch attributes for a model instance and persist it into the data source.
        """
        pass

    def test_sample_replace_by_id_post_samplesid_replace(self):
        """
        Test case for sample_replace_by_id_post_samplesid_replace

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_sample_replace_by_id_put_samplesid(self):
        """
        Test case for sample_replace_by_id_put_samplesid

        Replace attributes for a model instance and persist it into the data source.
        """
        pass

    def test_sample_replace_or_create_post_samples_replace_or_create(self):
        """
        Test case for sample_replace_or_create_post_samples_replace_or_create

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_sample_replace_or_create_put_samples(self):
        """
        Test case for sample_replace_or_create_put_samples

        Replace an existing model instance or insert a new one into the data source.
        """
        pass

    def test_sample_update_all(self):
        """
        Test case for sample_update_all

        Update instances of the model matched by {{where}} from the data source.
        """
        pass

    def test_sample_upsert_with_where(self):
        """
        Test case for sample_upsert_with_where

        Update an existing model instance or insert a new one into the data source based on the where criteria.
        """
        pass


if __name__ == '__main__':
    unittest.main()
