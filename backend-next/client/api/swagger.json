{"swagger":"2.0","info":{"version":"2.5.0","title":"dacat-api"},"basePath":"/api/v2","paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate__post_Users_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/upsertWithWhere":{"post":{"tags":["User"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"User.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__put_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById__post_Users_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with email verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/change-password":{"post":{"tags":["User"],"summary":"Change a user's password.","operationId":"User.changePassword","parameters":[{"name":"oldPassword","in":"formData","required":true,"type":"string"},{"name":"newPassword","in":"formData","required":true,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/datasetlifecycle":{"get":{"tags":["Dataset"],"summary":"Fetches hasOne relation datasetlifecycle.","operationId":"Dataset.prototype.__get__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in datasetlifecycle of this model.","operationId":"Dataset.prototype.__create__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update datasetlifecycle of this model.","operationId":"Dataset.prototype.__update__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes datasetlifecycle of this model.","operationId":"Dataset.prototype.__destroy__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/datablocks/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for datablocks.","operationId":"Dataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for datablocks.","operationId":"Dataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for datablocks.","operationId":"Dataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datasets/{id}/origdatablocks/{fk}":{"get":{"tags":["Dataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"Dataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"Dataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"Dataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/Datasets/{id}/datablocks":{"get":{"tags":["Dataset"],"summary":"Queries datablocks of Dataset.","operationId":"Dataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"Dataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all datablocks of this model.","operationId":"Dataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/datablocks/count":{"get":{"tags":["Dataset"],"summary":"Counts datablocks of Dataset.","operationId":"Dataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/{id}/origdatablocks":{"get":{"tags":["Dataset"],"summary":"Queries origdatablocks of Dataset.","operationId":"Dataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["Dataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"Dataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"Dataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Datasets/{id}/origdatablocks/count":{"get":{"tags":["Dataset"],"summary":"Counts origdatablocks of Dataset.","operationId":"Dataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets":{"post":{"tags":["Dataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Dataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"patch":{"tags":["Dataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Dataset.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Dataset.replaceOrCreate__put_Datasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Dataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Dataset"}}}},"deprecated":false}},"/Datasets/replaceOrCreate":{"post":{"tags":["Dataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Dataset.replaceOrCreate__post_Datasets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/upsertWithWhere":{"post":{"tags":["Dataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Dataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/{id}/exists":{"get":{"tags":["Dataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"Dataset.exists__get_Datasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Datasets/{id}":{"head":{"tags":["Dataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"Dataset.exists__head_Datasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Dataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"put":{"tags":["Dataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Dataset.replaceById__put_Datasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false},"delete":{"tags":["Dataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Dataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Dataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Dataset.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Dataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/{id}/replace":{"post":{"tags":["Dataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Dataset.replaceById__post_Datasets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/findOne":{"get":{"tags":["Dataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Dataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datasets/update":{"post":{"tags":["Dataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Dataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Dataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/count":{"get":{"tags":["Dataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Dataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datasets/change-stream":{"post":{"tags":["Dataset"],"summary":"Create a change stream.","operationId":"Dataset.createChangeStream__post_Datasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Dataset"],"summary":"Create a change stream.","operationId":"Dataset.createChangeStream__get_Datasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/RawDatasets/{id}/sample":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation sample.","operationId":"RawDataset.prototype.__get__sample","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/RawDatasets/{id}/proposal":{"get":{"tags":["RawDataset"],"summary":"Fetches belongsTo relation proposal.","operationId":"RawDataset.prototype.__get__proposal","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/RawDatasets/{id}/datasetlifecycle":{"get":{"tags":["RawDataset"],"summary":"Fetches hasOne relation datasetlifecycle.","operationId":"RawDataset.prototype.__get__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in datasetlifecycle of this model.","operationId":"RawDataset.prototype.__create__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update datasetlifecycle of this model.","operationId":"RawDataset.prototype.__update__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes datasetlifecycle of this model.","operationId":"RawDataset.prototype.__destroy__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/datablocks/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for datablocks.","operationId":"RawDataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for datablocks.","operationId":"RawDataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for datablocks.","operationId":"RawDataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks/{fk}":{"get":{"tags":["RawDataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"RawDataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/RawDatasets/{id}/datablocks":{"get":{"tags":["RawDataset"],"summary":"Queries datablocks of RawDataset.","operationId":"RawDataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"RawDataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all datablocks of this model.","operationId":"RawDataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/datablocks/count":{"get":{"tags":["RawDataset"],"summary":"Counts datablocks of RawDataset.","operationId":"RawDataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks":{"get":{"tags":["RawDataset"],"summary":"Queries origdatablocks of RawDataset.","operationId":"RawDataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["RawDataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"RawDataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"RawDataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/RawDatasets/{id}/origdatablocks/count":{"get":{"tags":["RawDataset"],"summary":"Counts origdatablocks of RawDataset.","operationId":"RawDataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets":{"post":{"tags":["RawDataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"RawDataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"patch":{"tags":["RawDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"RawDataset.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"RawDataset.replaceOrCreate__put_RawDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"RawDataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/RawDataset"}}}},"deprecated":false}},"/RawDatasets/replaceOrCreate":{"post":{"tags":["RawDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"RawDataset.replaceOrCreate__post_RawDatasets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/upsertWithWhere":{"post":{"tags":["RawDataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"RawDataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/{id}/exists":{"get":{"tags":["RawDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"RawDataset.exists__get_RawDatasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/RawDatasets/{id}":{"head":{"tags":["RawDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"RawDataset.exists__head_RawDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"RawDataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"put":{"tags":["RawDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"RawDataset.replaceById__put_RawDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false},"delete":{"tags":["RawDataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"RawDataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["RawDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"RawDataset.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"RawDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/{id}/replace":{"post":{"tags":["RawDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"RawDataset.replaceById__post_RawDatasets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/findOne":{"get":{"tags":["RawDataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"RawDataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/RawDataset"}}},"deprecated":false}},"/RawDatasets/update":{"post":{"tags":["RawDataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"RawDataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/RawDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/count":{"get":{"tags":["RawDataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"RawDataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/RawDatasets/change-stream":{"post":{"tags":["RawDataset"],"summary":"Create a change stream.","operationId":"RawDataset.createChangeStream__post_RawDatasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["RawDataset"],"summary":"Create a change stream.","operationId":"RawDataset.createChangeStream__get_RawDatasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/RawDatasets/facet":{"get":{"tags":["RawDataset"],"summary":"Find all datasets within a date range","operationId":"RawDataset.facet","parameters":[{"name":"creationLocation","in":"query","required":false,"type":"string"},{"name":"ownerGroup","in":"query","required":false,"type":"string"},{"name":"startDate","in":"query","required":false,"type":"string"},{"name":"endDate","in":"query","required":false,"type":"string"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"results":{"type":"object"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/datasetlifecycle":{"get":{"tags":["DerivedDataset"],"summary":"Fetches hasOne relation datasetlifecycle.","operationId":"DerivedDataset.prototype.__get__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in datasetlifecycle of this model.","operationId":"DerivedDataset.prototype.__create__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update datasetlifecycle of this model.","operationId":"DerivedDataset.prototype.__update__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes datasetlifecycle of this model.","operationId":"DerivedDataset.prototype.__destroy__datasetlifecycle","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__findById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__destroyById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for datablocks.","operationId":"DerivedDataset.prototype.__updateById__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for datablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks/{fk}":{"get":{"tags":["DerivedDataset"],"summary":"Find a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__findById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__destroyById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Update a related item by id for origdatablocks.","operationId":"DerivedDataset.prototype.__updateById__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for origdatablocks","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks":{"get":{"tags":["DerivedDataset"],"summary":"Queries datablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in datablocks of this model.","operationId":"DerivedDataset.prototype.__create__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all datablocks of this model.","operationId":"DerivedDataset.prototype.__delete__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/datablocks/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts datablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__datablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks":{"get":{"tags":["DerivedDataset"],"summary":"Queries origdatablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__get__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false},"post":{"tags":["DerivedDataset"],"summary":"Creates a new instance in origdatablocks of this model.","operationId":"DerivedDataset.prototype.__create__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Deletes all origdatablocks of this model.","operationId":"DerivedDataset.prototype.__delete__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/DerivedDatasets/{id}/origdatablocks/count":{"get":{"tags":["DerivedDataset"],"summary":"Counts origdatablocks of DerivedDataset.","operationId":"DerivedDataset.prototype.__count__origdatablocks","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets":{"post":{"tags":["DerivedDataset"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DerivedDataset.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"patch":{"tags":["DerivedDataset"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.replaceOrCreate__put_DerivedDatasets","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DerivedDataset.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DerivedDataset"}}}},"deprecated":false}},"/DerivedDatasets/replaceOrCreate":{"post":{"tags":["DerivedDataset"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DerivedDataset.replaceOrCreate__post_DerivedDatasets_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/upsertWithWhere":{"post":{"tags":["DerivedDataset"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DerivedDataset.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/{id}/exists":{"get":{"tags":["DerivedDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"DerivedDataset.exists__get_DerivedDatasets_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DerivedDatasets/{id}":{"head":{"tags":["DerivedDataset"],"summary":"Check whether a model instance exists in the data source.","operationId":"DerivedDataset.exists__head_DerivedDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DerivedDataset.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"put":{"tags":["DerivedDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.replaceById__put_DerivedDatasets_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false},"delete":{"tags":["DerivedDataset"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DerivedDataset.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["DerivedDataset"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"DerivedDataset id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/{id}/replace":{"post":{"tags":["DerivedDataset"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DerivedDataset.replaceById__post_DerivedDatasets_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/findOne":{"get":{"tags":["DerivedDataset"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DerivedDataset.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DerivedDataset"}}},"deprecated":false}},"/DerivedDatasets/update":{"post":{"tags":["DerivedDataset"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DerivedDataset.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DerivedDataset"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/count":{"get":{"tags":["DerivedDataset"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DerivedDataset.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DerivedDatasets/change-stream":{"post":{"tags":["DerivedDataset"],"summary":"Create a change stream.","operationId":"DerivedDataset.createChangeStream__post_DerivedDatasets_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DerivedDataset"],"summary":"Create a change stream.","operationId":"DerivedDataset.createChangeStream__get_DerivedDatasets_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Samples":{"post":{"tags":["Sample"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Sample.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"patch":{"tags":["Sample"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Sample.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"put":{"tags":["Sample"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Sample.replaceOrCreate__put_Samples","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Sample.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Sample"}}}},"deprecated":false}},"/Samples/replaceOrCreate":{"post":{"tags":["Sample"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Sample.replaceOrCreate__post_Samples_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/upsertWithWhere":{"post":{"tags":["Sample"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Sample.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/{id}/exists":{"get":{"tags":["Sample"],"summary":"Check whether a model instance exists in the data source.","operationId":"Sample.exists__get_Samples_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Samples/{id}":{"head":{"tags":["Sample"],"summary":"Check whether a model instance exists in the data source.","operationId":"Sample.exists__head_Samples_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Sample.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"put":{"tags":["Sample"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Sample.replaceById__put_Samples_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false},"delete":{"tags":["Sample"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Sample.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Sample"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Sample.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Sample id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/{id}/replace":{"post":{"tags":["Sample"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Sample.replaceById__post_Samples_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/findOne":{"get":{"tags":["Sample"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Sample.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Sample"}}},"deprecated":false}},"/Samples/update":{"post":{"tags":["Sample"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Sample.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Sample"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Samples/count":{"get":{"tags":["Sample"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Sample.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Samples/change-stream":{"post":{"tags":["Sample"],"summary":"Create a change stream.","operationId":"Sample.createChangeStream__post_Samples_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Sample"],"summary":"Create a change stream.","operationId":"Sample.createChangeStream__get_Samples_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Proposals/{id}/measurementPeriods/{fk}":{"get":{"tags":["Proposal"],"summary":"Find a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__findById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Delete a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__destroyById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Update a related item by id for measurementPeriods.","operationId":"Proposal.prototype.__updateById__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"fk","in":"path","description":"Foreign key for measurementPeriods","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/MeasurementPeriod"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false}},"/Proposals/{id}/measurementPeriods":{"get":{"tags":["Proposal"],"summary":"Queries measurementPeriods of Proposal.","operationId":"Proposal.prototype.__get__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/MeasurementPeriod"}}}},"deprecated":false},"post":{"tags":["Proposal"],"summary":"Creates a new instance in measurementPeriods of this model.","operationId":"Proposal.prototype.__create__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/MeasurementPeriod"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/MeasurementPeriod"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Deletes all measurementPeriods of this model.","operationId":"Proposal.prototype.__delete__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Proposals/{id}/measurementPeriods/count":{"get":{"tags":["Proposal"],"summary":"Counts measurementPeriods of Proposal.","operationId":"Proposal.prototype.__count__measurementPeriods","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals":{"post":{"tags":["Proposal"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Proposal.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"patch":{"tags":["Proposal"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Proposal.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Proposal.replaceOrCreate__put_Proposals","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Proposal.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Proposal"}}}},"deprecated":false}},"/Proposals/replaceOrCreate":{"post":{"tags":["Proposal"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Proposal.replaceOrCreate__post_Proposals_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/upsertWithWhere":{"post":{"tags":["Proposal"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Proposal.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/{id}/exists":{"get":{"tags":["Proposal"],"summary":"Check whether a model instance exists in the data source.","operationId":"Proposal.exists__get_Proposals_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Proposals/{id}":{"head":{"tags":["Proposal"],"summary":"Check whether a model instance exists in the data source.","operationId":"Proposal.exists__head_Proposals_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Proposal.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"put":{"tags":["Proposal"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Proposal.replaceById__put_Proposals_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false},"delete":{"tags":["Proposal"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Proposal.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Proposal"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Proposal.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Proposal id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/{id}/replace":{"post":{"tags":["Proposal"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Proposal.replaceById__post_Proposals_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/findOne":{"get":{"tags":["Proposal"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Proposal.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Proposal"}}},"deprecated":false}},"/Proposals/update":{"post":{"tags":["Proposal"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Proposal.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Proposal"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals/count":{"get":{"tags":["Proposal"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Proposal.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Proposals/change-stream":{"post":{"tags":["Proposal"],"summary":"Create a change stream.","operationId":"Proposal.createChangeStream__post_Proposals_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Proposal"],"summary":"Create a change stream.","operationId":"Proposal.createChangeStream__get_Proposals_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Proposals/findByInstrumentAndDate":{"get":{"tags":["Proposal"],"summary":"Find proposal that took data at specified instrument and time","operationId":"Proposal.findByInstrumentAndDate","parameters":[{"name":"instrument","in":"query","required":false,"type":"string"},{"name":"measureTime","in":"query","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"findByInstrumentAndDate":{"type":"object"}}}}},"deprecated":false}},"/Proposals/searchText":{"get":{"tags":["Proposal"],"summary":"Search text inside proposal","operationId":"Proposal.searchText","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"searchText":{"type":"object"}}}}},"deprecated":false}},"/DatasetLifecycles/{id}/dataset":{"get":{"tags":["DatasetLifecycle"],"summary":"Fetches belongsTo relation dataset.","operationId":"DatasetLifecycle.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"DatasetLifecycle id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/DatasetLifecycles":{"post":{"tags":["DatasetLifecycle"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"DatasetLifecycle.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"put":{"tags":["DatasetLifecycle"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DatasetLifecycle.patchOrCreate__put_DatasetLifecycles","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"patch":{"tags":["DatasetLifecycle"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"DatasetLifecycle.patchOrCreate__patch_DatasetLifecycles","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"get":{"tags":["DatasetLifecycle"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"DatasetLifecycle.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/DatasetLifecycle"}}}},"deprecated":false}},"/DatasetLifecycles/replaceOrCreate":{"post":{"tags":["DatasetLifecycle"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"DatasetLifecycle.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false}},"/DatasetLifecycles/upsertWithWhere":{"post":{"tags":["DatasetLifecycle"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"DatasetLifecycle.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false}},"/DatasetLifecycles/{id}/exists":{"get":{"tags":["DatasetLifecycle"],"summary":"Check whether a model instance exists in the data source.","operationId":"DatasetLifecycle.exists__get_DatasetLifecycles_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/DatasetLifecycles/{id}":{"head":{"tags":["DatasetLifecycle"],"summary":"Check whether a model instance exists in the data source.","operationId":"DatasetLifecycle.exists__head_DatasetLifecycles_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["DatasetLifecycle"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"DatasetLifecycle.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"delete":{"tags":["DatasetLifecycle"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"DatasetLifecycle.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"put":{"tags":["DatasetLifecycle"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DatasetLifecycle.prototype.patchAttributes__put_DatasetLifecycles_{id}","parameters":[{"name":"id","in":"path","description":"DatasetLifecycle id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false},"patch":{"tags":["DatasetLifecycle"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"DatasetLifecycle.prototype.patchAttributes__patch_DatasetLifecycles_{id}","parameters":[{"name":"id","in":"path","description":"DatasetLifecycle id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false}},"/DatasetLifecycles/{id}/replace":{"post":{"tags":["DatasetLifecycle"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"DatasetLifecycle.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false}},"/DatasetLifecycles/findOne":{"get":{"tags":["DatasetLifecycle"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"DatasetLifecycle.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/DatasetLifecycle"}}},"deprecated":false}},"/DatasetLifecycles/update":{"post":{"tags":["DatasetLifecycle"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"DatasetLifecycle.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/DatasetLifecycle"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/DatasetLifecycles/count":{"get":{"tags":["DatasetLifecycle"],"summary":"Count instances of the model matched by where from the data source.","operationId":"DatasetLifecycle.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/DatasetLifecycles/change-stream":{"post":{"tags":["DatasetLifecycle"],"summary":"Create a change stream.","operationId":"DatasetLifecycle.createChangeStream__post_DatasetLifecycles_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["DatasetLifecycle"],"summary":"Create a change stream.","operationId":"DatasetLifecycle.createChangeStream__get_DatasetLifecycles_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Datablocks/{id}/dataset":{"get":{"tags":["Datablock"],"summary":"Fetches belongsTo relation dataset.","operationId":"Datablock.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"Datablock id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/Datablocks":{"post":{"tags":["Datablock"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Datablock.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"patch":{"tags":["Datablock"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Datablock.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"put":{"tags":["Datablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Datablock.replaceOrCreate__put_Datablocks","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Datablock.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Datablock"}}}},"deprecated":false}},"/Datablocks/replaceOrCreate":{"post":{"tags":["Datablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Datablock.replaceOrCreate__post_Datablocks_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/upsertWithWhere":{"post":{"tags":["Datablock"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Datablock.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/{id}/exists":{"get":{"tags":["Datablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"Datablock.exists__get_Datablocks_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Datablocks/{id}":{"head":{"tags":["Datablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"Datablock.exists__head_Datablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Datablock.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"put":{"tags":["Datablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Datablock.replaceById__put_Datablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false},"delete":{"tags":["Datablock"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Datablock.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Datablock"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Datablock.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Datablock id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/{id}/replace":{"post":{"tags":["Datablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Datablock.replaceById__post_Datablocks_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/findOne":{"get":{"tags":["Datablock"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Datablock.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Datablock"}}},"deprecated":false}},"/Datablocks/update":{"post":{"tags":["Datablock"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Datablock.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Datablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Datablocks/count":{"get":{"tags":["Datablock"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Datablock.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Datablocks/change-stream":{"post":{"tags":["Datablock"],"summary":"Create a change stream.","operationId":"Datablock.createChangeStream__post_Datablocks_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Datablock"],"summary":"Create a change stream.","operationId":"Datablock.createChangeStream__get_Datablocks_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/AccessUsers":{"post":{"tags":["AccessUser"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"AccessUser.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false},"patch":{"tags":["AccessUser"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"AccessUser.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false},"put":{"tags":["AccessUser"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AccessUser.replaceOrCreate__put_AccessUsers","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false},"get":{"tags":["AccessUser"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"AccessUser.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessUser"}}}},"deprecated":false}},"/AccessUsers/replaceOrCreate":{"post":{"tags":["AccessUser"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AccessUser.replaceOrCreate__post_AccessUsers_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false}},"/AccessUsers/upsertWithWhere":{"post":{"tags":["AccessUser"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"AccessUser.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false}},"/AccessUsers/{id}/exists":{"get":{"tags":["AccessUser"],"summary":"Check whether a model instance exists in the data source.","operationId":"AccessUser.exists__get_AccessUsers_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/AccessUsers/{id}":{"head":{"tags":["AccessUser"],"summary":"Check whether a model instance exists in the data source.","operationId":"AccessUser.exists__head_AccessUsers_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["AccessUser"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"AccessUser.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false},"put":{"tags":["AccessUser"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AccessUser.replaceById__put_AccessUsers_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false},"delete":{"tags":["AccessUser"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"AccessUser.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["AccessUser"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"AccessUser.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"AccessUser id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false}},"/AccessUsers/{id}/replace":{"post":{"tags":["AccessUser"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AccessUser.replaceById__post_AccessUsers_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false}},"/AccessUsers/findOne":{"get":{"tags":["AccessUser"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"AccessUser.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessUser"}}},"deprecated":false}},"/AccessUsers/update":{"post":{"tags":["AccessUser"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"AccessUser.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessUser"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/AccessUsers/count":{"get":{"tags":["AccessUser"],"summary":"Count instances of the model matched by where from the data source.","operationId":"AccessUser.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/AccessUsers/change-stream":{"post":{"tags":["AccessUser"],"summary":"Create a change stream.","operationId":"AccessUser.createChangeStream__post_AccessUsers_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["AccessUser"],"summary":"Create a change stream.","operationId":"AccessUser.createChangeStream__get_AccessUsers_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/AccessGroups":{"post":{"tags":["AccessGroup"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"AccessGroup.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false},"patch":{"tags":["AccessGroup"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"AccessGroup.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false},"put":{"tags":["AccessGroup"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AccessGroup.replaceOrCreate__put_AccessGroups","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false},"get":{"tags":["AccessGroup"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"AccessGroup.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessGroup"}}}},"deprecated":false}},"/AccessGroups/replaceOrCreate":{"post":{"tags":["AccessGroup"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"AccessGroup.replaceOrCreate__post_AccessGroups_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false}},"/AccessGroups/upsertWithWhere":{"post":{"tags":["AccessGroup"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"AccessGroup.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false}},"/AccessGroups/{id}/exists":{"get":{"tags":["AccessGroup"],"summary":"Check whether a model instance exists in the data source.","operationId":"AccessGroup.exists__get_AccessGroups_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/AccessGroups/{id}":{"head":{"tags":["AccessGroup"],"summary":"Check whether a model instance exists in the data source.","operationId":"AccessGroup.exists__head_AccessGroups_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["AccessGroup"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"AccessGroup.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false},"put":{"tags":["AccessGroup"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AccessGroup.replaceById__put_AccessGroups_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false},"delete":{"tags":["AccessGroup"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"AccessGroup.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["AccessGroup"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"AccessGroup.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"AccessGroup id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false}},"/AccessGroups/{id}/replace":{"post":{"tags":["AccessGroup"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"AccessGroup.replaceById__post_AccessGroups_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false}},"/AccessGroups/findOne":{"get":{"tags":["AccessGroup"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"AccessGroup.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessGroup"}}},"deprecated":false}},"/AccessGroups/update":{"post":{"tags":["AccessGroup"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"AccessGroup.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/AccessGroup"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/AccessGroups/count":{"get":{"tags":["AccessGroup"],"summary":"Count instances of the model matched by where from the data source.","operationId":"AccessGroup.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/AccessGroups/change-stream":{"post":{"tags":["AccessGroup"],"summary":"Create a change stream.","operationId":"AccessGroup.createChangeStream__post_AccessGroups_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["AccessGroup"],"summary":"Create a change stream.","operationId":"AccessGroup.createChangeStream__get_AccessGroups_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/SynchTimes":{"post":{"tags":["SynchTimes"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"SynchTimes.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false},"patch":{"tags":["SynchTimes"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"SynchTimes.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false},"put":{"tags":["SynchTimes"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SynchTimes.replaceOrCreate__put_SynchTimes","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false},"get":{"tags":["SynchTimes"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"SynchTimes.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/SynchTimes"}}}},"deprecated":false}},"/SynchTimes/replaceOrCreate":{"post":{"tags":["SynchTimes"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"SynchTimes.replaceOrCreate__post_SynchTimes_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false}},"/SynchTimes/upsertWithWhere":{"post":{"tags":["SynchTimes"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"SynchTimes.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false}},"/SynchTimes/{id}/exists":{"get":{"tags":["SynchTimes"],"summary":"Check whether a model instance exists in the data source.","operationId":"SynchTimes.exists__get_SynchTimes_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/SynchTimes/{id}":{"head":{"tags":["SynchTimes"],"summary":"Check whether a model instance exists in the data source.","operationId":"SynchTimes.exists__head_SynchTimes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["SynchTimes"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"SynchTimes.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false},"put":{"tags":["SynchTimes"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SynchTimes.replaceById__put_SynchTimes_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false},"delete":{"tags":["SynchTimes"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"SynchTimes.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["SynchTimes"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"SynchTimes.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"SynchTimes id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false}},"/SynchTimes/{id}/replace":{"post":{"tags":["SynchTimes"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"SynchTimes.replaceById__post_SynchTimes_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false}},"/SynchTimes/findOne":{"get":{"tags":["SynchTimes"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"SynchTimes.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/SynchTimes"}}},"deprecated":false}},"/SynchTimes/update":{"post":{"tags":["SynchTimes"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"SynchTimes.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/SynchTimes"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/SynchTimes/count":{"get":{"tags":["SynchTimes"],"summary":"Count instances of the model matched by where from the data source.","operationId":"SynchTimes.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/SynchTimes/change-stream":{"post":{"tags":["SynchTimes"],"summary":"Create a change stream.","operationId":"SynchTimes.createChangeStream__post_SynchTimes_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["SynchTimes"],"summary":"Create a change stream.","operationId":"SynchTimes.createChangeStream__get_SynchTimes_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/UserCredentials/{id}/user":{"get":{"tags":["UserCredential"],"summary":"Fetches belongsTo relation user.","operationId":"UserCredential.prototype.__get__user","parameters":[{"name":"id","in":"path","description":"UserCredential id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/UserCredentials":{"post":{"tags":["UserCredential"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UserCredential.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"patch":{"tags":["UserCredential"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UserCredential.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"put":{"tags":["UserCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserCredential.replaceOrCreate__put_UserCredentials","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UserCredential.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserCredential"}}}},"deprecated":false}},"/UserCredentials/replaceOrCreate":{"post":{"tags":["UserCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserCredential.replaceOrCreate__post_UserCredentials_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/upsertWithWhere":{"post":{"tags":["UserCredential"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UserCredential.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/{id}/exists":{"get":{"tags":["UserCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserCredential.exists__get_UserCredentials_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UserCredentials/{id}":{"head":{"tags":["UserCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserCredential.exists__head_UserCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UserCredential.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"put":{"tags":["UserCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserCredential.replaceById__put_UserCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false},"delete":{"tags":["UserCredential"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UserCredential.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UserCredential"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UserCredential.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UserCredential id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/{id}/replace":{"post":{"tags":["UserCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserCredential.replaceById__post_UserCredentials_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/findOne":{"get":{"tags":["UserCredential"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UserCredential.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserCredential"}}},"deprecated":false}},"/UserCredentials/update":{"post":{"tags":["UserCredential"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UserCredential.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UserCredentials/count":{"get":{"tags":["UserCredential"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UserCredential.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UserCredentials/change-stream":{"post":{"tags":["UserCredential"],"summary":"Create a change stream.","operationId":"UserCredential.createChangeStream__post_UserCredentials_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UserCredential"],"summary":"Create a change stream.","operationId":"UserCredential.createChangeStream__get_UserCredentials_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/UserIdentities/{id}/user":{"get":{"tags":["UserIdentity"],"summary":"Fetches belongsTo relation user.","operationId":"UserIdentity.prototype.__get__user","parameters":[{"name":"id","in":"path","description":"UserIdentity id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/UserIdentities":{"post":{"tags":["UserIdentity"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"UserIdentity.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"patch":{"tags":["UserIdentity"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"put":{"tags":["UserIdentity"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.replaceOrCreate__put_UserIdentities","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"UserIdentity.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/UserIdentity"}}}},"deprecated":false}},"/UserIdentities/replaceOrCreate":{"post":{"tags":["UserIdentity"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"UserIdentity.replaceOrCreate__post_UserIdentities_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/upsertWithWhere":{"post":{"tags":["UserIdentity"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"UserIdentity.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/{id}/exists":{"get":{"tags":["UserIdentity"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserIdentity.exists__get_UserIdentities_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/UserIdentities/{id}":{"head":{"tags":["UserIdentity"],"summary":"Check whether a model instance exists in the data source.","operationId":"UserIdentity.exists__head_UserIdentities_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"UserIdentity.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"put":{"tags":["UserIdentity"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.replaceById__put_UserIdentities_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false},"delete":{"tags":["UserIdentity"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"UserIdentity.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["UserIdentity"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"UserIdentity id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/{id}/replace":{"post":{"tags":["UserIdentity"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"UserIdentity.replaceById__post_UserIdentities_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/findOne":{"get":{"tags":["UserIdentity"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"UserIdentity.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/UserIdentity"}}},"deprecated":false}},"/UserIdentities/update":{"post":{"tags":["UserIdentity"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"UserIdentity.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/UserIdentity"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/UserIdentities/count":{"get":{"tags":["UserIdentity"],"summary":"Count instances of the model matched by where from the data source.","operationId":"UserIdentity.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/UserIdentities/change-stream":{"post":{"tags":["UserIdentity"],"summary":"Create a change stream.","operationId":"UserIdentity.createChangeStream__post_UserIdentities_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["UserIdentity"],"summary":"Create a change stream.","operationId":"UserIdentity.createChangeStream__get_UserIdentities_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/ApplicationCredentials":{"post":{"tags":["ApplicationCredential"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"ApplicationCredential.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"patch":{"tags":["ApplicationCredential"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"put":{"tags":["ApplicationCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.replaceOrCreate__put_ApplicationCredentials","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"ApplicationCredential.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/ApplicationCredential"}}}},"deprecated":false}},"/ApplicationCredentials/replaceOrCreate":{"post":{"tags":["ApplicationCredential"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"ApplicationCredential.replaceOrCreate__post_ApplicationCredentials_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/upsertWithWhere":{"post":{"tags":["ApplicationCredential"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"ApplicationCredential.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/{id}/exists":{"get":{"tags":["ApplicationCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"ApplicationCredential.exists__get_ApplicationCredentials_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/ApplicationCredentials/{id}":{"head":{"tags":["ApplicationCredential"],"summary":"Check whether a model instance exists in the data source.","operationId":"ApplicationCredential.exists__head_ApplicationCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"ApplicationCredential.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"put":{"tags":["ApplicationCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.replaceById__put_ApplicationCredentials_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false},"delete":{"tags":["ApplicationCredential"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"ApplicationCredential.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["ApplicationCredential"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"ApplicationCredential id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/{id}/replace":{"post":{"tags":["ApplicationCredential"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"ApplicationCredential.replaceById__post_ApplicationCredentials_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/findOne":{"get":{"tags":["ApplicationCredential"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"ApplicationCredential.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/ApplicationCredential"}}},"deprecated":false}},"/ApplicationCredentials/update":{"post":{"tags":["ApplicationCredential"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"ApplicationCredential.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/ApplicationCredential"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/ApplicationCredentials/count":{"get":{"tags":["ApplicationCredential"],"summary":"Count instances of the model matched by where from the data source.","operationId":"ApplicationCredential.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/ApplicationCredentials/change-stream":{"post":{"tags":["ApplicationCredential"],"summary":"Create a change stream.","operationId":"ApplicationCredential.createChangeStream__post_ApplicationCredentials_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["ApplicationCredential"],"summary":"Create a change stream.","operationId":"ApplicationCredential.createChangeStream__get_ApplicationCredentials_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Policies":{"post":{"tags":["Policy"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Policy.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"patch":{"tags":["Policy"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Policy.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"put":{"tags":["Policy"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Policy.replaceOrCreate__put_Policies","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Policy.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Policy"}}}},"deprecated":false}},"/Policies/replaceOrCreate":{"post":{"tags":["Policy"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Policy.replaceOrCreate__post_Policies_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/upsertWithWhere":{"post":{"tags":["Policy"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Policy.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/{id}/exists":{"get":{"tags":["Policy"],"summary":"Check whether a model instance exists in the data source.","operationId":"Policy.exists__get_Policies_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Policies/{id}":{"head":{"tags":["Policy"],"summary":"Check whether a model instance exists in the data source.","operationId":"Policy.exists__head_Policies_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Policy.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"put":{"tags":["Policy"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Policy.replaceById__put_Policies_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false},"delete":{"tags":["Policy"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Policy.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Policy"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Policy.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Policy id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/{id}/replace":{"post":{"tags":["Policy"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Policy.replaceById__post_Policies_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/findOne":{"get":{"tags":["Policy"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Policy.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Policy"}}},"deprecated":false}},"/Policies/update":{"post":{"tags":["Policy"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Policy.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Policy"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Policies/count":{"get":{"tags":["Policy"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Policy.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Policies/change-stream":{"post":{"tags":["Policy"],"summary":"Create a change stream.","operationId":"Policy.createChangeStream__post_Policies_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Policy"],"summary":"Create a change stream.","operationId":"Policy.createChangeStream__get_Policies_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Jobs":{"post":{"tags":["Job"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Job.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"patch":{"tags":["Job"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Job.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"put":{"tags":["Job"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Job.replaceOrCreate__put_Jobs","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Job.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Job"}}}},"deprecated":false}},"/Jobs/replaceOrCreate":{"post":{"tags":["Job"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Job.replaceOrCreate__post_Jobs_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/upsertWithWhere":{"post":{"tags":["Job"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"Job.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/{id}/exists":{"get":{"tags":["Job"],"summary":"Check whether a model instance exists in the data source.","operationId":"Job.exists__get_Jobs_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Jobs/{id}":{"head":{"tags":["Job"],"summary":"Check whether a model instance exists in the data source.","operationId":"Job.exists__head_Jobs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Job.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"put":{"tags":["Job"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Job.replaceById__put_Jobs_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false},"delete":{"tags":["Job"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Job.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Job"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Job.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"Job id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/{id}/replace":{"post":{"tags":["Job"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Job.replaceById__post_Jobs_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/findOne":{"get":{"tags":["Job"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Job.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Job"}}},"deprecated":false}},"/Jobs/update":{"post":{"tags":["Job"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Job.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/Job"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/Jobs/count":{"get":{"tags":["Job"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Job.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Jobs/change-stream":{"post":{"tags":["Job"],"summary":"Create a change stream.","operationId":"Job.createChangeStream__post_Jobs_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Job"],"summary":"Create a change stream.","operationId":"Job.createChangeStream__get_Jobs_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/OrigDatablocks/{id}/dataset":{"get":{"tags":["OrigDatablock"],"summary":"Fetches belongsTo relation dataset.","operationId":"OrigDatablock.prototype.__get__dataset","parameters":[{"name":"id","in":"path","description":"OrigDatablock id","required":true,"type":"string","format":"JSON"},{"name":"refresh","in":"query","required":false,"type":"boolean"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Dataset"}}},"deprecated":false}},"/OrigDatablocks":{"post":{"tags":["OrigDatablock"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"OrigDatablock.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"patch":{"tags":["OrigDatablock"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.patchOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"put":{"tags":["OrigDatablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.replaceOrCreate__put_OrigDatablocks","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"OrigDatablock.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/OrigDatablock"}}}},"deprecated":false}},"/OrigDatablocks/replaceOrCreate":{"post":{"tags":["OrigDatablock"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"OrigDatablock.replaceOrCreate__post_OrigDatablocks_replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/upsertWithWhere":{"post":{"tags":["OrigDatablock"],"summary":"Update an existing model instance or insert a new one into the data source based on the where criteria.","operationId":"OrigDatablock.upsertWithWhere","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/{id}/exists":{"get":{"tags":["OrigDatablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrigDatablock.exists__get_OrigDatablocks_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/OrigDatablocks/{id}":{"head":{"tags":["OrigDatablock"],"summary":"Check whether a model instance exists in the data source.","operationId":"OrigDatablock.exists__head_OrigDatablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"OrigDatablock.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"put":{"tags":["OrigDatablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.replaceById__put_OrigDatablocks_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false},"delete":{"tags":["OrigDatablock"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"OrigDatablock.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["OrigDatablock"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.prototype.patchAttributes","parameters":[{"name":"id","in":"path","description":"OrigDatablock id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/{id}/replace":{"post":{"tags":["OrigDatablock"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"OrigDatablock.replaceById__post_OrigDatablocks_{id}_replace","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"description":"Model instance data","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/findOne":{"get":{"tags":["OrigDatablock"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"OrigDatablock.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit - must be a JSON-encoded string ({\"something\":\"value\"})","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/OrigDatablock"}}},"deprecated":false}},"/OrigDatablocks/update":{"post":{"tags":["OrigDatablock"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"OrigDatablock.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"description":"An object of model property name/value pairs","$ref":"#/definitions/OrigDatablock"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"Information related to the outcome of the operation","type":"object","properties":{"count":{"description":"The number of instances updated","type":"number","format":"double"}}}}},"deprecated":false}},"/OrigDatablocks/count":{"get":{"tags":["OrigDatablock"],"summary":"Count instances of the model matched by where from the data source.","operationId":"OrigDatablock.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/OrigDatablocks/change-stream":{"post":{"tags":["OrigDatablock"],"summary":"Create a change stream.","operationId":"OrigDatablock.createChangeStream__post_OrigDatablocks_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["OrigDatablock"],"summary":"Create a change stream.","operationId":"OrigDatablock.createChangeStream__get_OrigDatablocks_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/RabbitMQ/status":{"get":{"tags":["RabbitMQ"],"summary":"Get an status overview of the connected rabbitmq server","operationId":"RabbitMQ.status","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}},"/RabbitMQ/queues":{"get":{"tags":["RabbitMQ"],"summary":"Get queues of connected rabbitmq server","operationId":"RabbitMQ.queues","parameters":[],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false}}},"tags":[{"name":"User"},{"name":"Dataset"},{"name":"RawDataset"},{"name":"DerivedDataset"},{"name":"Sample"},{"name":"Proposal"},{"name":"DatasetLifecycle"},{"name":"Datablock"},{"name":"AccessUser"},{"name":"AccessGroup"},{"name":"SynchTimes"},{"name":"UserCredential"},{"name":"UserIdentity"},{"name":"ApplicationCredential"},{"name":"Policy"},{"name":"Job"},{"name":"OrigDatablock"},{"name":"RabbitMQ","description":"Provide access to RabbitMQ server stats and queues."}],"consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"created":{"type":"string","format":"date-time"},"userId":{"$ref":"#/definitions/ObjectID"}},"required":["id"],"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["email"],"additionalProperties":false},"DatasetLifecycle":{"properties":{"id":{"description":"ID of status information. This must be the ID of the associated dataset","type":"string"},"isOnDisk":{"description":"Flag which is true, if full dataset is available on disk","type":"boolean"},"isOnTape":{"description":"Flag which is true, if full dataset has been stored to tape","type":"boolean"},"archiveStatusMessage":{"description":"Latest status update message for this dataset from archive system, e.g. archive-in-progress,  60%-stored-on-tape etc","type":"string"},"retrieveStatusMessage":{"description":"Latest status update message for this dataset concerning retrieve from archive system","type":"string"},"dateOfLastMessage":{"description":"Time when last status message was sent. Format according to chapter 5.6 internet date/time format in RFC 3339. This will be filled automatically if not provided","type":"string","format":"date-time"},"dateOfDiskPurging":{"description":"Time when dataset will be removed from disk, assuming that is already stored on tape. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"archiveRetentionTime":{"description":"When the dataset's future fate will be evaluated again, e.g. to decide if the dataset can be deleted from archive. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"isExported":{"description":"Flag is true if data was exported to another location","type":"boolean"},"exportedTo":{"description":"Location of the export destination","type":"string"},"dateOfPublishing":{"description":"Date when dataset is supposed to become public according to data policy","type":"string","format":"date-time"},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["id"],"additionalProperties":false},"Datablock":{"properties":{"id":{"description":"Catalog internal UUIDv4 for datablock","type":"string"},"archiveId":{"description":"Unique identifier given bey archive system to the stored datablock. This id is used when data is retrieved back.","type":"string"},"size":{"description":"Total size in bytes of all files in datablock when unpacked","type":"number","format":"double"},"packedSize":{"description":"Size of datablock package file","type":"number","format":"double"},"version":{"description":"Version string defining format of how data is packed and stored in archive","type":"string"},"dataFileList":{"type":"array","items":{"$ref":"#/definitions/Datafile"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["id","archiveId","size","version","dataFileList","ownerGroup"],"additionalProperties":false},"OrigDatablock":{"properties":{"id":{"$ref":"#/definitions/ObjectID"},"size":{"type":"number","format":"double"},"dataFileList":{"type":"array","items":{"$ref":"#/definitions/Datafile"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"datasetId":{"type":"string"},"rawDatasetId":{"type":"string"},"derivedDatasetId":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["size","dataFileList","ownerGroup"],"additionalProperties":false},"Dataset":{"properties":{"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, optionally including protocol and file server hostname, e.g. nfs://fileserver1.example.com/some/path/to/sourcefolder","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"type":{"description":"Characterize data, e.g. as raw, derived, test, calibration data","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"userTargetLocation":{"description":"User choosable absolute virtual path where datasets are stored. Mainly used as a help for the enduser at dataset retrieval time to find the proper dataset. Will be prepended by p-group","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"doi":{"description":"Digital object Identifier like doi: used for publication purposes","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"Sample":{"properties":{"samplelId":{"type":"string"},"owner":{"type":"string"},"description":{"type":"string"},"createdAt":{"type":"string","format":"date-time"},"sampleCharacteristics":{"type":"object"},"attachments":{"type":"array","items":{"type":"string"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"updatedAt":{"type":"string","format":"date-time"}},"required":["samplelId","ownerGroup"],"additionalProperties":false},"Proposal":{"properties":{"proposalId":{"description":"Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended","type":"string"},"pi_email":{"description":"Email of principal investigator","type":"string"},"pi_firstname":{"description":"First name of principal investigator","type":"string"},"pi_lastname":{"description":"Last name of principal investigator","type":"string"},"email":{"description":"Email of main proposer","type":"string"},"firstname":{"description":"First name of main proposer","type":"string"},"lastname":{"description":"Last name of main proposer","type":"string"},"title":{"type":"string"},"abstract":{"type":"string"},"attachments":{"description":"Array of URLs pointing to attached documents","type":"array","items":{"type":"string"}},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"MeasurementPeriodList":{"type":"array","items":{"$ref":"#/definitions/MeasurementPeriod"}}},"required":["proposalId","email","ownerGroup"],"additionalProperties":false},"RawDataset":{"properties":{"principalInvestigator":{"description":"Email of principal investigator","type":"string"},"endTime":{"description":"Time of end of data taking for this dataset, format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"creationLocation":{"description":"Unique location identifier where data was taken, usually in the form /Site-name/facility-name/instrumentOrBeamline-name","type":"string"},"dataFormat":{"description":"Defines format of subsequent scientific meta data, e.g Nexus Version x.y","type":"string"},"scientificMetadata":{"description":"JSON object containing the scientific meta data","type":"object"},"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, optionally including protocol and file server hostname, e.g. nfs://fileserver1.example.com/some/path/to/sourcefolder","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"type":{"description":"Characterize data, e.g. as raw, derived, test, calibration data","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"userTargetLocation":{"description":"User choosable absolute virtual path where datasets are stored. Mainly used as a help for the enduser at dataset retrieval time to find the proper dataset. Will be prepended by p-group","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"doi":{"description":"Digital object Identifier like doi: used for publication purposes","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"},"sampleId":{"type":"string"},"proposalId":{"type":"string"}},"required":["principalInvestigator","creationLocation","pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"DerivedDataset":{"properties":{"investigator":{"description":"Email of person pursuing the data analysis","type":"string"},"inputDatasets":{"description":"Array of input dataset identifiers used in producing the derived dataset. Ideally these are the global identifier to existing datasets inside this or federated data catalogs","type":"array","items":{"type":"string"}},"usedSoftware":{"description":"A list of links to software repositories which uniquely identifies the software used and the version for yielding the derived data","type":"array","items":{"type":"string"}},"jobParameters":{"description":"The creation process of the drived data will usually depend on input job parameters. The full structure of these input parameters are stored here","type":"object"},"jobLogData":{"description":"The output job logfile. Keep the size of this log data well below 15 MB ","type":"string"},"pid":{"description":"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/","type":"string"},"owner":{"description":"Owner of the data set, usually first name + lastname","type":"string"},"ownerEmail":{"description":"Email of owner of the data set","type":"string"},"orcidOfOwner":{"description":"ORCID of owner https://orcid.org if available","type":"string"},"contactEmail":{"description":"Email of contact person for this dataset","type":"string"},"sourceFolder":{"description":"Absolute file path on file server containing the files of this dataset, optionally including protocol and file server hostname, e.g. nfs://fileserver1.example.com/some/path/to/sourcefolder","type":"string"},"size":{"description":"Total size of all source files contained in source folder on disk when unpacked","type":"number","format":"double"},"packedSize":{"description":"Total size of all datablock package files created for this dataset","type":"number","format":"double"},"creationTime":{"description":"Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"type":{"description":"Characterize data, e.g. as raw, derived, test, calibration data","type":"string"},"validationStatus":{"description":"Defines a level of trust, e.g. a measure of how much data was verified or used by other persons","type":"string"},"keywords":{"description":"Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs","type":"array","items":{"type":"string"}},"description":{"description":"Free text explanation of contents of dataset","type":"string"},"userTargetLocation":{"description":"User choosable absolute virtual path where datasets are stored. Mainly used as a help for the enduser at dataset retrieval time to find the proper dataset. Will be prepended by p-group","type":"string"},"classification":{"description":"ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low'","type":"string"},"license":{"description":"Name of license under which data can be used","type":"string"},"version":{"description":"Version of API used in creation of dataset","type":"string"},"doi":{"description":"Digital object Identifier like doi: used for publication purposes","type":"string"},"isPublished":{"description":"Flag is true when data are made publically available","type":"boolean"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["investigator","inputDatasets","usedSoftware","pid","owner","contactEmail","sourceFolder","creationTime","type","ownerGroup"],"additionalProperties":false},"MeasurementPeriod":{"properties":{"id":{"description":"id currently needed by limitation in embedsmanny","type":"string"},"instrument":{"description":"Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT","type":"string"},"start":{"description":"Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"end":{"description":"Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"comment":{"description":"Additional information relevant for this measurement period, e.g. if different accounts were used for data taking","type":"string"}},"required":["id","instrument"],"additionalProperties":false},"AccessUser":{"properties":{"sAMAccountName":{"type":"string"},"displayName":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"memberOf":{"type":"array","items":{"type":"string"}}},"required":["sAMAccountName"],"additionalProperties":false},"AccessGroup":{"properties":{"sAMAccountName":{"type":"string"},"description":{"type":"string"},"member":{"type":"array","items":{"type":"string"}},"memberOf":{"type":"array","items":{"type":"string"}}},"required":["sAMAccountName"],"additionalProperties":false},"SynchTimes":{"properties":{"myid":{"type":"number","format":"double"},"lastSynchTime":{"type":"string"},"lastSynchSN":{"type":"number","format":"double"},"affectedUsers":{"type":"array","items":{"type":"string"}},"affectedGroups":{"type":"array","items":{"type":"string"}}},"required":["myid","lastSynchTime","lastSynchSN"],"additionalProperties":false},"UserCredential":{"properties":{"provider":{"type":"string"},"authScheme":{"type":"string"},"externalId":{"type":"string"},"profile":{"type":"object"},"credentials":{"type":"object"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"},"userId":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"UserIdentity":{"properties":{"provider":{"type":"string"},"authScheme":{"type":"string"},"externalId":{"type":"string"},"profile":{"type":"object"},"credentials":{"type":"object"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"},"userId":{"$ref":"#/definitions/ObjectID"}},"additionalProperties":false},"ApplicationCredential":{"properties":{"provider":{"type":"string"},"authScheme":{"type":"string"},"credentials":{"type":"object"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["provider"],"additionalProperties":false},"Policy":{"properties":{"availability":{"default":"low","description":"Defines the level of redundancy in storage to minimize loss of data. Allowed values are low, medium, high. Low could e.g. mean one tape copy only, medium could mean two tape copies and high two geo-redundant tape copies","type":"string"},"tapeRetentionTime":{"default":10,"description":"Number of years after creation time, where datasets are subject to retention policies, possibly leading to deletion of data on tape.","type":"number","format":"double"},"autoArchiveDelay":{"default":7,"description":"Number of days after dataset creation that (remaining) datasets are archived automatically","type":"number","format":"double"},"ownerGroup":{"description":"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151","type":"string"},"accessGroups":{"description":"Optional additional groups which have read access to the data. Users which are member in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users","type":"array","items":{"type":"string"}},"id":{"$ref":"#/definitions/ObjectID"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["ownerGroup"],"additionalProperties":false},"Job":{"properties":{"emailJobInitiator":{"description":"The email of the person initiating the job request","type":"string"},"type":{"default":"retrieve","description":"Type of job, e.g. archive, retrieve etc","type":"string"},"creationTime":{"description":"Time when job is created. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"executionTime":{"description":"Time when job should be executed. If not specified then the Job will be executed asap. Format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"jobParams":{"description":"Object of key-value pairs defining job input parameters, e.g. 'desinationPath' for retrieve jobs or 'tapeCopies' for archive jobs","type":"object"},"jobStatusMessage":{"description":"Defines current status of job lifecycle","type":"string"},"datasetList":{"description":"Array of objects with keys: pid, files. The value for the pid key defines the dataset ID, the value for the files key is an array of file names. This array is either an empty array, implying that all files within the dataset are selected or an explicit list of dataset-relative file paths, which should be selected","type":"object"},"id":{"$ref":"#/definitions/ObjectID"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}},"required":["emailJobInitiator","type","datasetList"],"additionalProperties":false},"ObjectID":{"type":"string","pattern":"^[a-fA-F\\d]{24}$"},"Datafile":{"properties":{"path":{"description":"Relative path of the file within the dataset folder","type":"string"},"size":{"description":"Uncompressed file size in bytes","type":"number","format":"double"},"time":{"description":"Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339","type":"string","format":"date-time"},"sha":{"description":"Checksum for the file, e.g. sha-2","type":"string"},"uid":{"description":"optional: user ID name as seen on filesystem","type":"string"},"gid":{"description":"optional: group ID name as seen on filesystem","type":"string"},"perm":{"description":"optional: Posix permission bits","type":"string"}},"required":["path"],"additionalProperties":false}}}