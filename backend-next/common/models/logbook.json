{
    "name": "Logbook",
    "description": "Logbook for proposals",
    "base": "PersistedModel",
    "idInjection": true,
    "options": {
        "validateUpsert": true
    },
    "properties": {
        "name": {
            "type": "string",
            "required": true
        },
        "members": {
            "type": ["string"],
            "required": true
        },
        "userMessages": {
            "type": ["object"]
        },
        "botMessages": {
            "type": ["object"]
        },
        "images": {
            "type": ["object"]
        }
    },
    "validations": [],
    "relations": {
        "proposal": {
            "type": "belongsTo",
            "model": "Proposal",
            "foreignKey": ""
        },
        "users": {
            "type": "hasMany",
            "model": "User",
            "foreignKey": ""
        }
    },
    "acls": [],
    "methods": {
        "findAllUserMessages": {
            "accepts": {
                "arg": "name",
                "type": "string",
                "description": "The name of the logbook"
            },
            "returns": {
                "arg": "findAllUserMessages",
                "type": ["object"]
            },
            "description": "Gets all text messages sent by users",
            "http": {
                "path": "/findAllUserMessages",
                "verb": "get"
            }
        },
        "findAllBotMessages": {
            "accepts": {
                "arg": "name",
                "type": "string",
                "description": "The name of the logbook"
            },
            "returns": {
                "arg": "findAllBotMessages",
                "type": ["object"]
            },
            "description": "Gets all text messages sent by the bot",
            "http": {
                "path": "/findAllBotMessages",
                "verb": "get"
            }
        },
        "findAllImages": {
            "accepts": {
                "arg": "name",
                "type": "string",
                "description": "The name of the logbook"
            },
            "returns": {
                "arg": "findAllImages",
                "type": ["object"]
            },
            "description": "Gets all images from logbook",
            "http": {
                "path": "/findAllImages",
                "verb": "get"
            }
        }
    }
}
