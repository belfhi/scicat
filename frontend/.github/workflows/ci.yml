name: CI

on: [push, pull_request]

jobs:
  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install and run tests
        run: |
          npm ci
          npm test

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2etests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run docker-compose
        run: |
          cp CI/ESS/cypress.json cypress.json
          cp CI/ESS/docker-compose.e2e.yaml docker-compose.yaml
          docker-compose pull
          docker-compose build --no-cache --parallel
          docker-compose up --exit-code-from cypress

  gitlab:
    name: Build and deploy
    needs: [unittest, e2etests]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger ESS pipeline
        uses: appleboy/gitlab-ci-action@master
        with:
          token: ${{ secrets.TOKEN }}
          project_id: 1805
          ref: "master"
          host: "https://gitlab.esss.lu.se"
          debug: true

      - name: Trigger MAXIV pipeline
        uses: appleboy/gitlab-ci-action@master
        with:
          token: ${{ secrets.MAXIV_TOKEN }}
          project_id: 21902377
          ref: "develop"
          host: "https://gitlab.com"
          debug: true

  ghcr:
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    name: Build docker image and publish to ghrc.io
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}