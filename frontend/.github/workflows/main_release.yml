name: Main Release

on:
  push:
    branches:
      - master
    tags:
      - 'v[1-9[0-9]*.[0-9]+.0'

jobs:
  unittest:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install and run tests
        run: |
          npm ci
          npm test

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  e2etests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run docker-compose
        run: |
          cp CI/ESS/e2e/cypress.json cypress.json
          cp CI/ESS/e2e/docker-compose.e2e.yaml docker-compose.yaml
          docker-compose pull
          docker-compose build --no-cache --parallel
          docker-compose up --exit-code-from cypress

  new-main-release:
    name: New main release on the main branch and docker image
    runs-on: ubuntu-latest
    needs: [unittest, e2etests]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Retrieve tag
        run: echo "NEW_TAG=`git describe --tags $(git rev-list --tags --max-count=1)`" >> $GITHUB_ENV

      - name: Report selected tag
        run: echo "New release will be tagged as ${{env.NEW_TAG}}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.NEW_TAG }}
          release_name: Release ${{ env.NEW_TAG }}
          body: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: scicatproject/frontend:${{env.NEW_TAG}},scicatproject/frontend:stable
