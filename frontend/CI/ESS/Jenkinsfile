node('docker') {
  stage('Checkout') {
    checkout scm
  }
  stage('Unit Test SciCat Frontend ') {
    // unit tests require mongodb container
    sh "docker build --file CI/ESS/Dockerfile.test  .  -t scicat/test"
    sh 'docker run  -t scicat/test npm test'
  }
  stage('Production Build') {
    if (env.BRANCH_NAME == 'develop') {
      withCredentials([ usernamePassword(credentialsId: 'dockerhubess',usernameVariable: 'docker_user',passwordVariable: 'docker_password' )]) {
        sh 'docker login -u essdmscdm -p $docker_password '
        // def IMAGE_ID = sh ( script: 'git rev-parse HEAD',returnStdout: true).trim()
        // sh "docker build --file CI/ESS/Dockerfile.dmscdev  . --tag scicat/frontend:latest --tag scicat/frontend:latestdev  -t scicat/frontend:${IMAGE_ID}dmscdev --build-arg env=dmscdev"
        // sh "docker push scicat/frontend:${IMAGE_ID}dmscdev"
        // sh "docker push scicat/frontend:latest"
        // echo "Git image id : ${IMAGE_ID}"
        // sh "docker rmi scicat/frontend:${IMAGE_ID}dmscdev"
      }
    }
  }
}
