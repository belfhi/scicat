@use "@angular/material" as mat;

@mixin color($theme) {
  $color-config: map-get($theme,"color");
  $primary: map-get($color-config, "primary");
  $hover: map-get($color-config, "hover");

  .table-toolbar {
    background: mat.get-color-from-palette(
      $primary,
      "default-contrast"
    ) !important;
  }
  /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version. */
  /* TODO(mdc-migration): The following rule targets internal classes of tabs that may no longer apply for the MDC version. */
  mat-table {
    .first-header-row {
      background-color: mat.get-color-from-palette($primary, "default");
    }

    mat-header-cell {
      mat-icon {
        color: mat.get-color-from-palette($primary, "default-contrast");
      }

      .mat-sort-header-content {
        color: mat.get-color-from-palette($primary, "default-contrast");
      }
    }


    mat-row:hover {
      background-color: mat.get-color-from-palette($hover, "lighter");
    }

    .mat-form-field-appearance-outline {
      /* TODO(mdc-migration): The following rule targets internal classes of form-field that may no longer apply for the MDC version. */
      .mat-form-field-outline {
      background: mat.get-color-from-palette($primary, "default-contrast");
      }
      /* TODO(mdc-migration): The following rule targets internal classes of form-field that may no longer apply for the MDC version. */
      .mat-form-field-outline-thick {
        color: mat.get-color-from-palette($primary, "default");;
      }
    }
  }

}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }
}
